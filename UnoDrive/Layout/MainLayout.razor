@inherits LayoutComponentBase
@using UnoDrive.Providers
@inject AppState AppState

<AppMudThemeProvider />
<AppMudProviders />
<AppStateProvider />

<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        <Icon IconName="Menu" Name="Toggle Menu" Class="flex-none d-flex" @onclick="@(_ => DrawerToggle())"/>
        <MudText Typo="Typo.h5" Class="ml-3">UnoDrive</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    private string IconUrl => $"/images/icons/{Theme}/menu.png";
    private string? Theme { get; set; }
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        AppState.OnChange += AppStateHasChanged;
    }
    
    private void AppStateHasChanged()
    {
        Theme = AppState.Theme;
        StateHasChanged();
    }
    
    public void Dispose()
    {
        Dispose(true);
        GC.SuppressFinalize(this);
    }

    protected virtual void Dispose(bool disposing)
    {
        if (disposing)
        {
            AppState.OnChange -= AppStateHasChanged;
        }
    }
}